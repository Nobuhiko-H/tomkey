#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        LEFTHALF {
            bindings = <&none>;
            key-positions = <34 35 18>;
        };
    };

    macros {
        CTRL_OPT_LEFT: CTRL_OPT_LEFT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LALT &kp LEFT>,
                <&macro_release>;

            label = "CTRL_OPT_LEFT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W         &kp E             &kp R           &kp T                                          &kp Y      &kp U    &kp I      &kp O    &kp P
&kp A      &kp S         &kp D             &lt 3 F         &lt 4 G         &kp F7          &kp F10        &lt 4 H    &lt 3 J  &kp K      &kp L    &kp MINUS
&kp Z      &kp X         &kp C             &lt 2 V         &lt 1 B         &kp DELETE      &kp BACKSPACE  &kp N      &kp M    &kp COMMA  &kp DOT  &kp ENTER
&kp LCTRL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT_SHIFT  &kp LANGUAGE_2  &kp SPACE       &kp SPACE      &kp LANG1                               &lt 5 ESCAPE
            >;
        };

        MOUSE {
            bindings = <
&trans     &trans        &trans            &trans          &trans                      &trans  &trans    &trans    &trans  &trans
&trans     &trans        &trans            &trans          &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB2  &none   &trans
&trans     &trans        &trans            &trans          &trans  &trans      &trans  &trans  &trans    &trans    &trans  &trans
&kp LCTRL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT_SHIFT  &trans  &trans      &trans  &mo 3                               &trans
            >;
        };

        SCROLL {
            bindings = <
&kp ESCAPE  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans      &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp F12     &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp F12     &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        ARROW {
            bindings = <
&none      &none      &none      &none      &none                                     &none  &none             &kp UP_ARROW       &none              &none
&kp LG(A)  &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)       &kp LG(LC(V))      &none  &none  &kp LEFT_ARROW    &kp DOWN_ARROW     &kp RIGHT_ARROW    &none
&kp LC(L)  &kp LC(T)  &kp LC(H)  &kp LC(R)  &none           &kp LG(LS(B))      &none  &none  &kp LA(LC(LEFT))  &kp LA(LC(ENTER))  &kp LA(LC(RIGHT))  &none
&kp LC(C)  &kp LC(B)  &kp LC(V)  &kp LC(M)  &kp LEFT_SHIFT  &none              &none  &none                                                          &none
            >;
        };

        NUM {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4    &kp NUMBER_5                        &kp LS(N5)    &kp DOUBLE_QUOTES  &kp HASH              &kp DOLLAR             &none
&kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9    &kp NUMBER_0  &none      &kp SLASH  &kp EXCL      &kp QUESTION       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE
&none         &none         &none         &none           &none         &none      &none      &kp LS(LBKT)  &kp LS(RBKT)       &kp SINGLE_QUOTE      &kp LS(N7)             &none
&none         &none         &none         &kp LEFT_SHIFT  &none         &none      &none      &none                                                                         &trans
            >;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&trans  &trans  &trans  &trans  &trans  &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans                          &kp F12
            >;
        };

        layer_6 {
            bindings = <
&kp LG(Q)      &kp LC(W)  &trans     &trans     &trans                         &bt BT_PRV  &bt BT_NXT  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&kp LG(LS(Z))  &trans     &kp LC(C)  &trans     &trans  &trans         &trans  &trans      &trans      &trans        &trans        &trans
&kp LG(Z)      &kp LG(X)  &kp LG(C)  &kp LG(V)  &trans  &kp SPACE      &trans  &trans      &trans      &trans        &trans        &trans
&trans         &trans     &trans     &trans     &trans  &trans         &trans  &trans                                              &trans
            >;
        };
    };
};
